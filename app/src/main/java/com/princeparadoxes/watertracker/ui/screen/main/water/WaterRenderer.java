package com.princeparadoxes.watertracker.ui.screen.main.water;

import android.content.Context;
import android.opengl.GLES20;
import android.opengl.GLSurfaceView;

import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.opengles.GL10;

public class WaterRenderer implements GLSurfaceView.Renderer {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  FIELDS  /////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    private final WaterWorld mWaterWorld;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  CONSTRUCTORS  ///////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    public WaterRenderer(Context context) {
        mWaterWorld = new WaterWorld(context);
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  RENDERER  ///////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public void onSurfaceCreated(GL10 gl, EGLConfig config) {
        GLES20.glClearColor(1f, 1f, 1f, 1f);
        mWaterWorld.init();
    }

    @Override
    public void onSurfaceChanged(GL10 gl, int width, int height) {
        gl.glViewport(0, 0, width, height);
        mWaterWorld.setSize(width, height);
        mWaterWorld.onSurfaceChanged(width, height);
    }

    @Override
    public void onDrawFrame(GL10 gl) {
        mWaterWorld.update(1.0f / 10.0f);
        mWaterWorld.onDrawV2();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  DELEGATES  //////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    public void setGravityWithLock(float gravityX, float gravityY) {
        mWaterWorld.setGravityWithLock(gravityX, gravityY);
    }

    public void restoreLastAccelerometerGravity() {
        mWaterWorld.restoreLastAccelerometerGravity();
    }

    public void addWater(int ml, int dayNorm) {
        mWaterWorld.addWater(ml, dayNorm);
    }

    public void clearWater() {
        mWaterWorld.clearWater();
    }
}
