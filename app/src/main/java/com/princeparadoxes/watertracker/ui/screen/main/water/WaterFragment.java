package com.princeparadoxes.watertracker.ui.screen.main.water;

import android.opengl.GLSurfaceView;
import android.os.Bundle;

import com.princeparadoxes.watertracker.ProjectApplication;
import com.princeparadoxes.watertracker.R;
import com.princeparadoxes.watertracker.base.BaseFragment;

import butterknife.BindView;
import io.reactivex.disposables.CompositeDisposable;

public class WaterFragment extends BaseFragment {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  VIEWS  //////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    @BindView(R.id.water_gl_view)
    GLSurfaceView mGLSurfaceView;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  FIELDS  /////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    private CompositeDisposable mDisposable;
    private boolean mIsGLViewInit = false;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////  INIT SCREEN  /////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ProjectApplication app = ProjectApplication.get(getActivity());
        WaterScope.Component component = DaggerWaterScope_Component.builder()
                .projectComponent(app.component())
                .build();
        component.inject(this);
    }

    @Override
    protected int layoutId() {
        return R.layout.fragment_water;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////  START SCREEN  ////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public void onStart() {
        super.onStart();
        mDisposable = new CompositeDisposable();
        initGlSurfaceViewIfNeeded();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  GL SURFACE VIEW  ////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    private void initGlSurfaceViewIfNeeded() {
        if (mIsGLViewInit) return;
        mIsGLViewInit = true;
        mGLSurfaceView.setEGLContextClientVersion(2);
        mGLSurfaceView.setEGLConfigChooser(8, 8, 8, 8, 8, 0);
        mGLSurfaceView.setRenderer(new WaterRenderer(getActivity()));
        mGLSurfaceView.setRenderMode(GLSurfaceView.RENDERMODE_CONTINUOUSLY);
    }

    @Override
    public void onResume() {
        super.onResume();
        mGLSurfaceView.onResume();
    }

    @Override
    public void onPause() {
        super.onPause();
        mGLSurfaceView.onPause();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  STOP SCREEN  ////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public void onStop() {
        mDisposable.dispose();
        super.onStop();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  NAVIGATION  ////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////  INSTANCE  ///////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    public static WaterFragment newInstance() {
        Bundle args = new Bundle();
        WaterFragment fragment = new WaterFragment();
        fragment.setArguments(args);
        return fragment;
    }

}
