buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {

    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.ofg.uptodate'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
//apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'realm-android'
apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/keystore.gradle"

apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/findbugs.gradle"
apply from: "$rootDir/gradle/pmd.gradle"

check.dependsOn('checkstyle')
check.dependsOn('findbugs')
check.dependsOn('pmd')
check.dependsOn('lint')

repositories {
    maven { url 'https://clojars.org/repo/' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {

        applicationId = versions.packagename

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        versionCode buildVersionCode()
        versionName buildVersionName()

        testApplicationId "${versions.packagename}.tests"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64"
        }

//        splits {
//            abi {
//                enable true
//                reset()
//                include "armeabi-v7a", "x86", "x86_64"
//                universalApk false
//            }
//        }

        resConfigs "en", "ru"

        // Enabling vector drawables support.
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/$keystore.debugKeystore")
            storePassword "$keystore.debugStorePass"
            keyAlias "$keystore.debugAliase"
            keyPassword "$keystore.debugKeyPass"
        }
        release {
            storeFile file("../keystore/$keystore.releaseKeystore")
            storePassword "$keystore.releaseStorePass"
            keyAlias "$keystore.releaseAliase"
            keyPassword "$keystore.releaseKeyPass"
        }
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "(D)${versions.appname}"
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            signingConfig signingConfigs.debug
            testCoverageEnabled = false
        }
        release {
            resValue "string", "app_name", "${versions.appname}"
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-rules.pro')
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warning 'InvalidPackage'
    }

}

dependencies {
    implementation project(':liquidview')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.2'
    implementation 'com.google.firebase:firebase-core:15.0.2'

    // Support libraries
    implementation deps.support.app_compat
    implementation deps.support.v4
    implementation deps.support.design
    implementation deps.support.recyclerview
    implementation deps.support.support_annotations
    implementation deps.support.cardview
    implementation deps.support.tabs

    // RxBinding
    implementation deps.rxbinding.core
    implementation deps.rxbinding.supportV4
    implementation deps.rxbinding.appcompatV7
    implementation deps.rxbinding.design
    implementation deps.rxbinding.recycler

    // DI
    implementation deps.dagger.runtime
    kapt deps.dagger.compiler
    compileOnly "javax.annotation:jsr250-api:1.0"

    // Architecture components
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler

    // Anko
//    implementation deps.anko.commons
//    implementation deps.anko.sdk25
//    implementation deps.anko.appcompat_v7
//    implementation deps.anko.appcompat_v7_commons
//    implementation deps.anko.cardview_v7
//    implementation deps.anko.design
//    implementation deps.anko.recyclerview_v7
//    implementation deps.anko.support_v4
//    implementation deps.anko.support_v4_commons

    // Ui
    implementation 'com.github.princeparadoxes:recyclerbindableadapter:1.3'
    implementation 'com.livetyping:cannyviewanimator:0.8'
    implementation 'com.yarolegovich:discrete-scrollview:1.1.4'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
    implementation 'com.airbnb.android:lottie:2.5.4'
    implementation "com.jakewharton.timber:timber:4.6.0"

    //rx
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    // Stetho
    debugImplementation "com.facebook.stetho:stetho:${versions.stetho}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"

    // Debug drawer
    debugImplementation 'io.palaima.debugdrawer:debugdrawer:0.7.0'
    releaseImplementation 'io.palaima.debugdrawer:debugdrawer-no-op:0.7.0'
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-commons:0.7.0'
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-actions:0.7.0'
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-okhttp:0.7.0'
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-okhttp3:0.7.0'
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-glide:0.7.0'

    // Leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"

    // Unit Tests
    androidTestImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-library:1.4-atlassian-1"
    testImplementation "org.mockito:mockito-core:2.11.0"
    testImplementation "com.google.truth:truth:0.28"

    // Espresso
    androidTestCompile("com.android.support.test.espresso:espresso-core:2.2.2", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

///////////////////////////////////////////////////
///////////// Print build finish time /////////////
///////////////////////////////////////////////////
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}

apply plugin: 'com.google.gms.google-services'
